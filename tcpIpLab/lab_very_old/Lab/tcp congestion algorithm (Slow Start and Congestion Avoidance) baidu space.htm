<!--STATUS OK-->


<html><head><meta http-equiv=content-type content="text/html; charset=gb2312"><title>tcp拥塞控制算法之（Slow Start and Congestion Avoidance）_High Performance_百度空间      </title>

<style type="text/css">

.error{color:#FF0000;font-size:12px}
.shareUser,.shareLastEditor{line-height:20px;color:#666666;text-align:left}
.shareLastEditor{margin:5px 0 8px;}





	





</style>

<script type="text/javascript" src="/ui/scripts/global.js"></script>
<script type="text/javascript" src="/static/common/scripts/libs.js"></script>
<script type="text/javascript" src="http://img.baidu.com/js/tangram-1.1.0.js"></script>


<script type="text/javascript">
var Session = {
    isLogin: ! true,
    isHost: "",
    userName: "lzwei_ac",   
    userPortrait:'7f736c7a7765695f61636606',
    spaceURL: "/actionplay",
    spBasicURL:"actionplay",
    spBasicURLEnc:"actionplay",
    visitorName:    "",
    visitorPortrait:'00000000',
    isActive: '',   
    visitorURL: "/index.html",        // 
    pageURL: "http://hi.baidu.com/actionplay/blog/item/67b3f7d077faf3d8572c8413%2Ehtml",    
    refer: "http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=Congestion+avoidance",
    spToken: 'af02ee020c9592d00b7cf6416ee98eb6', 
    spFriendDomain: 'http://frd.baidu.com',
    spSpaceDomain: 'http://hi.baidu.com',
    spPortraitDomain: '',
    spSpaceStaticDomain: 'http://hi.baidu.com' 

    ,isDrag:  false  
    ,isProfile:  false   
    };
</script>

<script language="javascript" src="/ui/scripts/dialog.js"></script>

<script type="text/javascript" src="/ui/scripts/CommentEditor/BdEditor-mined.js?v=2.3"></script>

<script type="text/javascript" src="/ui/scripts/spamuser/antiSpam.js"></script>

<script LANGUAGE="JavaScript" src="/js/g_spjs.js"></script>

<script language="javascript">

<!--


(function(){var a=109;function c(d){var f="nslog__"+(new Date()).getTime();var e=window[f]=new Image();e.onload=(e.onerror=function(){window[f]=null});e.src="http://nsclick.baidu.com/v.gif?pid="+a+"&url="+encodeURIComponent(d)+"&type=0&_t="+Math.random();e=null}function b(g){g=g||event;var f=g.srcElement||g.target;if(f.nodeType!=1){f=f.parentNode}while(f&&f.tagName&&f.tagName.toUpperCase()!="A"){f=f.parentNode}if(f&&f.tagName&&f.tagName.toUpperCase()=="A"){if(f.protocol.indexOf("http")==0&&!/^([\w-]+\.)*?baidu\.com/i.test(f.host)){var d=f.href;setTimeout(function(){c(d)},1)}}f=null}if(document.attachEvent){document.attachEvent("onmousedown",b);window.attachEvent("onunload",function(){document.detachEvent("onmousedown",b)})}else{document.addEventListener("mousedown",b,false);window.addEventListener("unload",function(){document.removeEventListener("mousedown",b,false)},false)}})();

var allkey="";

var i=0;

var flag=0;

function setpv(allnum)

{

	var num = allnum.split('_');

	document.getElementById("result").innerHTML=num[0];

}



function checkMail(s)

{

  	var pattern=/\w+@\w+\.[a-z]+/;

  	if(pattern.test(s))

    {

       return true;

    }

  	else

   {

      return false;

   }

}





function checkeandu(eanduid)

{

	var eanduvalue=G(eanduid).value;

	var len=bytes(eanduvalue);

	if(len>128)

	{

		showErr(2,"您输入的网址或邮箱太长，请保持在128字节以内。");

		return false;

	}

	else

	{

		 return true;

	}



}



function cmtdel(str)

{

	var pop=new Popup({ contentType:3,isReloadOnClose:false,width:340,height:80});

	pop.setContent("title","删除评论");

	pop.setContent("confirmCon","您确定要彻底删除这条评论吗？");

	pop.setContent("callBack",delCallback2);

	pop.setContent("parameter",{fid:str,popup:pop});

	pop.build();

	pop.show();

	return false;

}

function delCallback2(para)

{

	var o_pop=para["popup"];

	o_pop.config.contentType=1;

	o_pop.setContent("contentUrl","");

	o_pop.reBuild();

	G(para["fid"]).target=o_pop.iframeIdName;

	eval("document."+para["fid"]).submit();

}



String.prototype.byteLength = function() {

    return this.replace(/[^\u0000-\u007f]/g,"\u0061\u0061").length;

}



function checkname(strid)

{

	var ele=document.getElementById(strid);

	var len=bytes(ele.value);

	if(len>49)

	{

		showErr(1,"您输入的姓名太长，请保持在49字节以内。");

		return false;

	}

	else

	{

		if(len==0)

		{

			document.getElementById(strid).value="匿名网友";

		}

		 return true;

	}



}



function checktext(textid)

{

        var tempStr='';

        var isLightFont=false;

		if(editor&&textid=="spBlogCmtText"){

			//document.getElementById("spBlogCmtText").value=editor.getHtml();

			tempStr=editor.getHtml();

			tempStr=tempStr.replace(/<span style="filter:glow\(color=#([0-9a-z]{3,6}),strength=2\);height:0px;color:#([0-9a-z]{3,6})">/ig,'');

			tempStr=tempStr.replace(/<\/span>/ig,'');

			document.getElementById("spBlogCmtText").value=tempStr;

            isLightFont=!(tempStr==editor.getHtml());

        }

		document.getElementById(textid).value=trimlr(textid);

		var str=trimrn(textid);

		len=str.length;

		if(len==0 || ((/^[\s,　]+$/gi).test(str)) )

		{

			showErr(3,"您必须输入评论内容，请检查。");

			return false;

		}

		else

        {

                len=str.byteLength();

                var maxLength=isLightFont?916:1000;

				if(len > maxLength)

				{

					showErr(3,"您输入的评论内容太长，请保持在500字以内。");

					return false;

				}

				if(editor&&textid=="spBlogCmtText"){

					document.getElementById("spBlogCmtText").value=editor.getHtml();

					document.getElementById(textid).value=trimlr(textid);

				}



			return true;

		}

}



function showErr(index,str)

{

	G(index+"_err").style.display="";

	G(index+"_err_con").innerHTML=str;

}

function hidErr(index)

{

	G(index+"_err").style.display="none";

	G(index+"_err_con").innerHTML="";

}



function alertPop(tit,con)

{

	var pop=new Popup({ contentType:4,isReloadOnClose:false,width:340,height:80});

	pop.setContent("title",tit);

	pop.setContent("alertCon",con);

	pop.build();

	pop.show();

}



function cmtfull()

{

	var cnum=0;

	if(cnum>=50000)

	{

		alertPop("发表评论","单篇日志评论数最多为50000条.");

		return false;

	}

	else

	{

		return true;

	}

}



function checkcmtform()

{

	if(checkname("spBlogCmtor")&&checkeandu("spBlogCmtURL")&&checktext("spBlogCmtText")&&cmtfull())

	{

		submitForm();

		return true;

	}

	else

	{

		return false;

	}

}



var g_pop=null;

function submitForm()

{

	g_pop=new Popup({ contentType:1,isReloadOnClose:false,width:340,height:80});

	g_pop.setContent("title","添加评论");

	g_pop.setContent("contentUrl","");

	g_pop.setContent("someDisabledBtn","btn_ok");

	g_pop.build();

	G("popFormSubmit").target=g_pop.iframeIdName;

	g_pop.show();

}



function g_close_pop()

{

	g_pop.close();

}



function formatonlinpic()

{

var picobj=document.getElementsByName("onlinepic");

var picnum=picobj.length;



	for(var i=0;i<picnum;i++)

	{

		if(picobj[i].width>200)

		{

			picobj[i].width=200;

		}

		if(picobj[i].height>200)

		{

			picobj[i].height=200;

		}

	}

    try{document.getElementById("btn_ok").disabled = "";}catch(e){}

}



function addToFavor(){

var blogTitle='tcp拥塞控制算法之（Slow Start and Congestion Avoidance）'.replace(/&#39;/g,'\'');

window.open('http://cang.baidu.com/do/add?it='+encodeURIComponent(blogTitle+'_百度空间')+'&iu='+encodeURIComponent(location.href)+'&fr=sp#nw=1','_s','scrollbars=no,width=600,height=450,right=75,top=20,status=no,resizable=yes');

return false;

}

function addToiTieba(){
    var blogTitle='tcp拥塞控制算法之（Slow Start and Congestion Avoidance）'.replace(/&#39;/g,'\'');
    window.open('http://tieba.baidu.com/i/sys/share?link='+encodeURIComponent('http://hi.baidu.com/actionplay/blog/item/67b3f7d077faf3d8572c8413.html')+'&type=text&title='+encodeURIComponent(blogTitle)+'&content=');
}

function addToShare(){
    window.open('http://apps.hi.baidu.com/share/?url='+encodeURIComponent('http://hi.baidu.com/actionplay/blog/item/67b3f7d077faf3d8572c8413.html'));
}


var isIE = /*@cc_on!@*/false;

function tracker(did,a){

	return function(){

		var t=new Date().getTime();

		var href=a.href;

        if(isIE){

            var r = /href\s*=\s*("|')?([^\s]*)\1/gi;

            if(r.test(a.outerHTML))

                href = RegExp.$2;

        }

        new Image().src = "http://hi.baidu.com/sys/statlog/1.gif?m=" + did + "&v=" + encodeURIComponent(href) + "&c=" + encodeURIComponent(location.href) + "&t="+t;

	}

}



function tracker_init(did){

	var _s=document.getElementById(did);

	var as = _s.getElementsByTagName('A');

	for(var i = 0, j = as.length; i < j; i ++){

		var a = as[i];

		if(isIE){

			a.attachEvent("onclick", tracker(did,a));

		}else{

			a.addEventListener("click", tracker(did,a), false);

		}

	}

}





/* some functions for cmt-reply */
        var g_cmtorInfo = [];
        function goCmtReply(cmtPorID){
            cmtreply(g_cmtorInfo[cmtPorID],cmtPorID);
        }
		function cmtreply(cmtName,cmtPorID)

		{

			cmtName=cmtName.replace(/<|>/g,"");

			window.location.hash="#send";

			var cmtForm=document.form1;

			cmtForm.cm.value="3";

			if(!cmtForm.spReferTarget)

			{

				var ipt=document.createElement("input");

				ipt.type="hidden";

				ipt.name="spReferTarget";

				ipt.value=cmtPorID;

				cmtForm.appendChild(ipt);

			}else cmtForm.spReferTarget.value=cmtPorID;





			 //G("reTitle").innerHTML="回复"+cmtName+"：";

			 G("cancleReLink").style.display="";

			 cmtForm.btn_ok.value="回复评论";





			 try{

				editor.window.focus();

                editor.window.document.body.innerHTML="回复"+cmtName+"：";



                var w = editor.window;

				if(w.getSelection){

					var d = w.document;

					var s = w.getSelection();

					var r = d.createRange();

					r.setStartAfter(d.body.firstChild);

					r.setEndAfter(d.body.lastChild);

					s.removeAllRanges();

					s.addRange(r);

				}

			}catch(e){

			 		try{

				 		cmtForm.getElementsByTagName("textarea")[0].focus();

				 		cmtForm.getElementsByTagName("textarea")[0].value="回复"+cmtName+"：";

				 	}catch(e){}

			}

		}



		function canclereply()

		{

			var cmtForm=document.form1;

			cmtForm.cm.value="1";

			try{cmtForm.removeChild(cmtForm.spReferTarget);}catch(e){}

			/*

			try{

					var cmt=cmtForm.getElementsByTagName("textarea")[0]

					cmt.value="";

					cmt.focus();

			}catch(e){}

			*/



			try{

					var ed=editor.window.document.body;

					ed.innerHTML="";

					editor.window.focus();

				}catch(e){

					var cmt=cmtForm.getElementsByTagName("textarea")[0];

					cmt.value="";

					cmt.focus();

			}



			G("cancleReLink").style.display="none";

			cmtForm.btn_ok.value="发表评论";

		}



		function gotoreply()

		{//to checking whether reply cmt

			if( window.location.hash.indexOf("&re=1")<0) return;

			var cmtID=window.location.hash.split("&")[0].replace("#","");

			var cmtlinks=document.getElementsByTagName("a");

			for(var i=0,n=cmtlinks.length;i<n;i++)

			{

				if(cmtlinks[i].name==cmtID){ var rename=cmtlinks[i].getAttribute("rename");  repid=cmtlinks[i].getAttribute("repid"); break;}

			}

			if(typeof(rename)!="undefined"){

				cmtreply(rename, repid);

			}

		}



//-->

</script>


<script type="text/javascript">

    /*<![CDATA[*/



window.onerror=function(){return true;}



var RelatedDocData = null, GetAndEval = false;

(function(){

	var xhr = BdAjax.getXHR();

	if(xhr == null){

		RelatedDocData = -1;

		return;

	}



	xhr.open("GET", "/sys/search?type=8&word=tcp%D3%B5%C8%FB%BF%D8%D6%C6%CB%E3%B7%A8%D6%AE%A3%A8Slow%20Start%20and%20Congestion%20Avoidance%A3%A9&item=67b3f7d077faf3d8572c8413&t=" + new Date().getTime(), true);

	xhr.onreadystatechange = function(){

		if(xhr.readyState == 4){

			if(xhr.status == 0 || xhr.status == 200){

				if(GetAndEval){

					eval(xhr.responseText);

				}else{

					RelatedDocData = xhr.responseText;

				}

			}

		}

	}

	xhr.send(null);

})();

/*]]>*/

</script>



</head>

<body onLoad="formatonlinpic();">

<center>

<script type="text/javascript">
/*<![CDATA[*/
if(top.location != self.location){
	top.location = self.location;
}
var myref = encodeURIComponent("http://hi.baidu.com/actionplay/blog/item/67b3f7d077faf3d8572c8413%2Ehtml");
/*]]>*/
</script>
<link rel="stylesheet" type="text/css" href="/ui/css/mods.css" />

<link rel="stylesheet" type="text/css" href="/actionplay/css/item/46e8590e44f82fedab645728.css" />

<link rel="stylesheet" type="text/css" href="/space.css" />

<div class="userbar">
    <div id="nav">
        <a class="logo" href="http://hi.baidu.com/index.htm"><img src="http://img.baidu.com/hi/img/ihome/logo.gif" border="0" alt="图片" /></a>

        <div class="manage">
            <form action="https://passport.baidu.com/?login" method="post">
                用户名:<input type="text" name="username" />&nbsp;&nbsp; 
                密码:<input type="password" name="password" /> 
                <input type="submit" value="" style="width:0; height:0;" />
                <a href="#" class="loginlink" onclick="this.parentNode.submit(); return false;">登录</a>  
            </form> 
            <a href="/reg/new" class="reglink">注册</a>
        </div>

    </div>
</div>



		



<div id="main" align="left">

<!--[if IE]>
<script>
var objmain = document.getElementById("main");
function updatesize(){ var bodyw = window.document.body.offsetWidth; if(bodyw <= 790) objmain.style.width="772px"; else if(bodyw >= 1016) objmain.style.width="996px"; else objmain.style.width="100%"; }
updatesize(); window.onresize = updatesize;
</script>
<![endif]-->

	<div id="header">

	<div class="lc"><div class="rc"></div></div>
<div class="tit"><a href="/actionplay/home" class="titlink" title="lzwei_ac的空间 http://hi.baidu.com/actionplay">High Performance</a></div>
<div class="desc">S U N & 00FFFF</div>
<div id="tabline">&nbsp;</div>

	<div id="tab"><a href="/actionplay/home">主页</a><a href="/actionplay/blog" class="on">博客</a><a href="/actionplay/album">相册</a><span>|</span><a href="/actionplay/profile">个人档案</a>

	<span>|</span><a href="/actionplay/friends">好友</a>







	</div>

</div>



<div class="stage">

<div class="stagepad">

<div style="width:100%">





	



	<table width="100%" border="0" cellspacing="0" cellpadding="0" class="modth">

	<tr><td class="modtl" width="7">&nbsp;</td>

	<td class="modtc" nowrap><div class="modhead"><span class="modtit">查看文章</span></div></td>

	<td class="modtc" nowrap align="right"></td>

	<td class="modtr" width="7">&nbsp;</td>

	</tr></table>



<div id="m_blog" class="modbox" style="overflow-x:hidden;">

<div class="tit">

tcp拥塞控制算法之（Slow Start and Congestion Avoidance）</div>

<div class="date">2009-12-13  21:43</div>




<table style="table-layout:fixed;width:100%"><tr><td><div id="blog_text" class="cnt"  ><pre><strong><font color="#0000ff">   本文来源于翻译 rtf 2581，结合个人学习linux内核实现。</font></strong></pre>
<pre><strong><font color="#ff0000">Part I: 算法：</font></strong></pre>
<pre><strong><br><br>tcp的传输控制要解决的本质问题，举个简单的例子而言，就好比两个人发短信，<br>一方在电脑上用飞信，一方用手机，我们希望在交流通畅的前提下，尽可能让网络中<br>有若干条信息，这样不至于让通信双方都停下来等待。<br><br>可想而知如果两方不通过某种办法来协调的话，经常会出现用手机收的一方一条信息<br>还没看完，下一条又收到的现象，甚至有可能出现手机信箱不够用的情况，这表示某<br>一方的通信能力太快，我们需要一种办法协调双方的速度，也就是说，我们既要让网<br>络中有一些短信我们能读到，同时又不能太多超出任何一方读信息的能力。<br><br></strong><strong><font color="#0000ff">专业名词引用：<br>http://hi.baidu.com/actionplay/blog/item/af5e16c54242baa38226ac38.html</font><br> </strong><br>   The slow start and congestion avoidance algorithms MUST be used by a<br>   TCP sender to control the amount of outstanding data being injected<br>   into the network.  To implement these algorithms, two variables are<br>   added to the TCP per-connection state.  The congestion window (cwnd)<br>   is a sender-side limit on the amount of data the sender can transmit<br>   into the network before receiving an acknowledgment (ACK), while the<br>   receiver's advertised window (rwnd) is a receiver-side limit on the<br>   amount of outstanding data.  The minimum of cwnd and rwnd governs<br>   data transmission.<br><strong>该算法用于tcp发送发控制in-flight数据量（各位大大有更好的解释还望不吝赐教），<br>主要用到cwnd和rwnd俩变量，二值取其小。</strong><br><br>   Another state variable, the slow start threshold (ssthresh), is used<br>   to determine whether the slow start or congestion avoidance algorithm<br>   is used to control data transmission, as discussed below.<br><br>   Beginning transmission into a network with unknown conditions<br>   requires TCP to slowly probe the network to determine the available<br>   capacity, in order to avoid congesting the network with an<br>   inappropriately large burst of data.  The slow start algorithm is<br>   used for this purpose at the beginning of a transfer, or after<br>   repairing loss detected by the retransmission timer.<br><br><strong>另外，ssthresh定义了一个slow start的最大值，如果使用了改制，则表示使用slow start算法。<br>通信的开始阶段，网络处于未知状态，为了避免一下子发送大量数据包把网络撑爆，<br>tcp需要某种机制来检测网络传输率，slow start 算法一般被用于传输的开始阶段，<br>或者在重传始终发现网络丢失被修复的情形下。</strong><br><br>   IW, the initial value of cwnd, MUST be less than or equal to 2*SMSS<br>   bytes and MUST NOT be more than 2 segments.<br><br>   We note that a non-standard, experimental TCP extension allows that a<br>   TCP MAY use a larger initial window (IW), as defined in equation 1<br>   [AFP98]:<br><br>      IW = min (4*SMSS, max (2*SMSS, 4380 bytes))           (1)<br><br>   With this extension, a TCP sender MAY use a 3 or 4 segment initial<br>   window, provided the combined size of the segments does not exceed<br>   4380 bytes.  We do NOT allow this change as part of the standard<br>   defined by this document.  However, we include discussion of (1) in<br>   the remainder of this document as a guideline for those experimenting<br>   with the change, rather than conforming to the present standards for<br>   TCP congestion control.<br><br><strong>cwnd的初始值IW一般小于2*SMSS，或者见公式（1）</strong></pre>
<pre><br><br>   The initial value of ssthresh MAY be arbitrarily high (for example,<br>   some implementations use the size of the advertised window), but it<br>   may be reduced in response to congestion.  The slow start algorithm<br>   is used when cwnd &lt; ssthresh, while the congestion avoidance<br>   algorithm is used when cwnd &gt; ssthresh.  When cwnd and ssthresh are<br>   equal the sender may use either slow start or congestion avoidance.<br><br>   During slow start, a TCP increments cwnd by at most SMSS bytes for<br>   each ACK received that acknowledges new data.  Slow start ends when<br>   cwnd exceeds ssthresh (or, optionally, when it reaches it, as noted<br>   above) or when congestion is observed.</pre>
<pre>During congestion avoidance, cwnd is incremented by 1 full-sized<br>   segment per round-trip time (RTT).  Congestion avoidance continues<br>   until congestion is detected.  One formula commonly used to update<br>   cwnd during congestion avoidance is given in equation 2:<br><br>      cwnd += SMSS*SMSS/cwnd                     (2)<br><br>   This adjustment is executed on every incoming non-duplicate ACK.<br>   Equation (2) provides an acceptable approximation to the underlying<br>   principle of increasing cwnd by 1 full-sized segment per RTT.  (Note<br>   that for a connection in which the receiver acknowledges every data<br>   segment, (2) proves slightly more aggressive than 1 segment per RTT,<br>   and for a receiver acknowledging every-other packet, (2) is less<br>   aggressive.)</pre>
<pre><pre>本rfc并未规定ssthresh初始值，其可以是任意大（当然必须受到buffer等限制）。</pre>
<pre><font color="#0000ff">while(ack_incoming) {</font></pre>
<pre><font color="#0000ff">if (cwnd &lt;ssthresh)</font></pre>
<pre><font color="#0000ff">{slow_start(); /* cwnd += SMSS*SMSS/cwnd; */}</font></pre>
<pre><font color="#0000ff">else</font></pre>
<pre><font color="#0000ff">congestion_avoidance();</font></pre>
<pre><font color="#0000ff">}</font></pre>
<br>
Implementation Note: Since integer arithmetic is usually used in TCP<br>
implementations, the formula given in equation 2 can fail to increase<br>
cwnd when the congestion window is very large (larger than<br>
SMSS*SMSS).  If the above formula yields 0, the result SHOULD be<br>
rounded up to 1 byte.</pre>
<pre><strong>注意(2)有可能出现整形溢出(SMSS*SMSS)或者cwnd增量为0的情况。</strong><br><br>   Implementation Note: older implementations have an additional<br>   additive constant on the right-hand side of equation (2).  This is<br>   incorrect and can actually lead to <strong>diminished performance</strong> [PAD+98].<br><br>   Another acceptable way to increase cwnd during congestion avoidance<br>   is to <strong>count the number of bytes</strong> that have been acknowledged by ACKs<br>   for new data.  (A drawback of this implementation is that it requires<br>   maintaining an additional state variable.)  When the number of bytes<br>   acknowledged reaches cwnd, then cwnd can be incremented by up to SMSS<br>   bytes.  Note that during congestion avoidance, cwnd MUST NOT be<br>   increased by more than the larger of either 1 full-sized segment per<br>   RTT, or the value computed using equation 2.</pre>
<pre><strong>使用segment数，还是字节数？</strong><br><br>   Implementation Note: some implementations maintain cwnd in units of<br>   bytes, while others in units of full-sized segments.  The latter will<br>   find equation (2) difficult to use, and may prefer to use the<br>   counting approach discussed in the previous paragraph.<br><br>   <strong>When a TCP sender detects segment loss using the retransmission<br>   timer, the value of ssthresh MUST be set to no more than the value<br>   given in equation 3:<br></strong><br>      ssthresh = max (FlightSize / 2, 2*SMSS)            (3)<br><br>   As discussed above, FlightSize is the amount of outstanding data in<br>   the network.<br><br>   Implementation Note: an easy mistake to make is to simply use cwnd,<br>   rather than FlightSize, which in some implementations may<br>   incidentally increase well beyond rwnd.</pre>
<pre>当发现有包需要超时重传之后，cwnd被设置为1SMSS, slow_start()算法重启。<br><br>   <strong>Furthermore, upon a timeout cwnd MUST be set to no more than the loss<br>   window, LW, which equals 1 full-sized segment</strong> (regardless of the<br>   value of IW).  Therefore, after retransmitting the dropped segment<br>   the TCP sender uses the slow start algorithm to increase the window<br>   from 1 full-sized segment to the new value of ssthresh, at which<br>   point congestion avoidance again takes over.</pre>
<div style="border-right: medium none; border-top: medium none; overflow: hidden; border-left: medium none; color: rgb(0,0,0); border-bottom: medium none; background-color: transparent; text-align: left; text-decoration: none">
<p><br>
Read more:<font color="#0000ff"> </font><a href="http://www.faqs.org/rfcs/rfc2581.html#ixzz0ZZfMq6RO"><font color="#0000ff">http://www.faqs.org/rfcs/rfc2581.html#ixzz0ZZfMq6RO</font></a></p>
<p>简而言之，慢启动算法设置一个cwnd变量，每次收到一个ACK之后cwnd++， 知道cwnd等于RTT时间内的允许的最大&ldquo;在途&rdquo;报文数。</p>
<p> </p>
<p><strong><font color="#ff0000">Part II: 实现：</font></strong></p>
<p><font color="#000000">在linux kernel 2.6.32版本中，linux-2.6.32/net/ipv4/tcp_cong.c定义了阻塞控制接口及默认reno实现，</font></p>
<p><font color="#000000">用户可以通过sysctl命令来选择内核使用的算法。</font></p>
<p><font color="#000000">接口定义：</font></p>
<p><font color="#000000">/* Set default value from kernel configuration at bootup */<br>
static int __init tcp_congestion_default(void);</font></p>
<p><font color="#000000">/* Build string with list of available congestion control values */<br>
void tcp_get_available_congestion_control(char *buf, size_t maxlen);</font></p>
<p><font color="#000000">/* Change congestion control for socket */<br>
int tcp_set_congestion_control(struct sock *sk, const char *name);</font></p>
<p><font color="#000000">/* Used by sysctl to change default congestion control */<br>
int tcp_set_default_congestion_control(const char *name);</font></p>
<p><font color="#000000">/*<br>
* Attach new congestion control algorithm to the list<br>
* of available options.<br>
*/<br>
int tcp_register_congestion_control(struct tcp_congestion_ops *ca);</font></p>
<p><font color="#000000"><strong>Linux reno 实现：</strong></font></p>
<p><font color="#000000"><span style="color: #008800; font-style: italic">/*</span><br>
<span style="color: #008800; font-style: italic">* TCP Reno congestion control</span><br>
<span style="color: #008800; font-style: italic">* This is special case used for fallback as well.</span><br>
<span style="color: #008800; font-style: italic">*/</span><br>
<span style="color: #008800; font-style: italic">/* This is Jacobson's slow start and congestion avoidance.</span><br>
<span style="color: #008800; font-style: italic">* SIGCOMM '88, p. 328.</span><br>
<span style="color: #008800; font-style: italic">*/</span><br>
<span style="font-weight: bold; color: #000080">void</span> <span style="color: #000000">tcp_reno_cong_avoid</span>(<span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">sock</span> <span style="color: #000000">*</span><span style="color: #000000">sk</span><span style="color: #000000">,</span> <span style="color: #000000">u32</span> <span style="color: #000000">ack</span><span style="color: #000000">,</span> <span style="color: #000000">u32</span> <span style="color: #000000">in_flight</span>)<br>
<span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_sock</span> <span style="color: #000000">*</span><span style="color: #000000">tp</span> <span style="color: #000000">=</span> <span style="color: #000000">tcp_sk</span>(<span style="color: #000000">sk</span>);<br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">!</span><span style="color: #000000">tcp_is_cwnd_limited</span>(<span style="color: #000000">sk</span><span style="color: #000000">,</span> <span style="color: #000000">in_flight</span>))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">return</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* In &quot;safe&quot; area, increase. */</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&lt;=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_ssthresh</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tcp_slow_start</span>(<span style="color: #000000">tp</span>);<br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* In dangerous area, increase slowly. */</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">else</span> <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">sysctl_tcp_abc</span>) <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* RFC3465: Appropriate Byte Count</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  * increase once for each full cwnd acked</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">bytes_acked</span> <span style="color: #000000">&gt;=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span><span style="color: #000000">*</span><span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">mss_cache</span>) <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">bytes_acked</span> <span style="color: #000000">-=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span><span style="color: #000000">*</span><span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">mss_cache</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&lt;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_clamp</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span><span style="color: #000000">++</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span> <span style="font-weight: bold; color: #000080">else</span> <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tcp_cong_avoid_ai</span>(<span style="color: #000000">tp</span><span style="color: #000000">,</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span>);<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span><br>
<span style="color: #000000">}</span></font></p>
<p><span style="color: #008800; font-style: italic">/*</span><br>
<span style="color: #008800; font-style: italic">* Slow start is used when congestion window is less than slow start</span><br>
<span style="color: #008800; font-style: italic">* threshold. This version implements the basic RFC2581 version</span><br>
<span style="color: #008800; font-style: italic">* and optionally supports:</span><br>
<span style="color: #008800; font-style: italic">*&nbsp;&nbsp;&nbsp;&nbsp;  RFC3742 Limited Slow Start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  - growth limited to max_ssthresh</span><br>
<span style="color: #008800; font-style: italic">*&nbsp;&nbsp;&nbsp;  RFC3465 Appropriate Byte Counting - growth limited by bytes acknowledged</span><br>
<span style="color: #008800; font-style: italic">*/</span><br>
<span style="font-weight: bold; color: #000080">void</span> <span style="color: #000000">tcp_slow_start</span>(<span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_sock</span> <span style="color: #000000">*</span><span style="color: #000000">tp</span>)<br>
<span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">int</span> <span style="color: #000000">cnt</span>; <span style="color: #008800; font-style: italic">/* increase in packets */</span><br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* RFC3465: ABC Slow start</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  * Increase only after a full MSS of bytes is acked</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  *</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  * TCP sender SHOULD increase cwnd by the number of</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  * previously unacknowledged bytes ACKed by each incoming</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  * acknowledgment, provided the increase is not more than L</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  */</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">sysctl_tcp_abc</span> <span style="color: #000000">&amp;&amp;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">bytes_acked</span> <span style="color: #000000">&lt;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">mss_cache</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">return</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">sysctl_tcp_max_ssthresh</span> <span style="color: #000000">&gt;</span> <span style="color: #0000ff">0</span> <span style="color: #000000">&amp;&amp;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&gt;</span> <span style="color: #000000">sysctl_tcp_max_ssthresh</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">cnt</span> <span style="color: #000000">=</span> <span style="color: #000000">sysctl_tcp_max_ssthresh</span> <span style="color: #000000">&gt;&gt;</span> <span style="color: #0000ff">1</span>;&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* limited slow start */</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">cnt</span> <span style="color: #000000">=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* exponential increase */</span><br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #008800; font-style: italic">/* RFC3465: ABC</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  * We MAY increase by 2 if discovered delayed ack</span><br>
<span style="color: #008800; font-style: italic">&nbsp;&nbsp;&nbsp;&nbsp;  */</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">sysctl_tcp_abc</span> <span style="color: #000000">&gt;</span> <span style="color: #0000ff">1</span> <span style="color: #000000">&amp;&amp;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">bytes_acked</span> <span style="color: #000000">&gt;=</span> <span style="color: #0000ff">2</span><span style="color: #000000">*</span><span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">mss_cache</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">cnt</span> <span style="color: #000000">&lt;&lt;=</span> <span style="color: #0000ff">1</span>;<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">bytes_acked</span> <span style="color: #000000">=</span> <span style="color: #0000ff">0</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span> <span style="color: #000000">+=</span> <span style="color: #000000">cnt</span>;<br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">while</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span> <span style="color: #000000">&gt;=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span>) <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span> <span style="color: #000000">-=</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&lt;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_clamp</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span><span style="color: #000000">++</span>;<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span><br>
<span style="color: #000000">}</span><br>
<span style="color: #000000">EXPORT_SYMBOL_GPL</span>(<span style="color: #000000">tcp_slow_start</span>);<br>
<br>
<span style="color: #008800; font-style: italic">/* In theory this is tp-&gt;snd_cwnd += 1 / tp-&gt;snd_cwnd (or alternative w) */</span><br>
<span style="font-weight: bold; color: #000080">void</span> <span style="color: #000000">tcp_cong_avoid_ai</span>(<span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_sock</span> <span style="color: #000000">*</span><span style="color: #000000">tp</span><span style="color: #000000">,</span> <span style="color: #000000">u32</span> <span style="color: #000000">w</span>)<br>
<span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span> <span style="color: #000000">&gt;=</span> <span style="color: #000000">w</span>) <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">if</span> (<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&lt;</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_clamp</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span><span style="color: #000000">++</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span> <span style="color: #000000">=</span> <span style="color: #0000ff">0</span>;<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span> <span style="font-weight: bold; color: #000080">else</span> <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd_cnt</span><span style="color: #000000">++</span>;<br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">}</span><br>
<span style="color: #000000">}</span><br>
<span style="color: #000000">EXPORT_SYMBOL_GPL</span>(<span style="color: #000000">tcp_cong_avoid_ai</span>);</p>
<div class="source" style="color: #000000" jquery1260806926718="14">
<p><strong>初始值：</strong></p>
<div class="source" style="color: #000000" jquery1260807052265="14"><span style="color: #008800; font-style: italic">/* Slow start threshold is half the congestion window (min 2) */</span><br>
<span style="color: #000000">u32</span> <span style="color: #000000">tcp_reno_ssthresh</span>(<span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">sock</span> <span style="color: #000000">*</span><span style="color: #000000">sk</span>)<br>
<span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">const</span> <span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_sock</span> <span style="color: #000000">*</span><span style="color: #000000">tp</span> <span style="color: #000000">=</span> <span style="color: #000000">tcp_sk</span>(<span style="color: #000000">sk</span>);<br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">return</span> <span style="color: #000000">max</span>(<span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_cwnd</span> <span style="color: #000000">&gt;&gt;</span> <span style="color: #0000ff">1</span><span style="color: #000000">U</span><span style="color: #000000">,</span> <span style="color: #0000ff">2</span><span style="color: #000000">U</span>);<br>
<span style="color: #000000">}</span><br>
<span style="color: #000000">EXPORT_SYMBOL_GPL</span>(<span style="color: #000000">tcp_reno_ssthresh</span>);<br>
<br>
<span style="color: #008800; font-style: italic">/* Lower bound on congestion window with halving. */</span><br>
<span style="color: #000000">u32</span> <span style="color: #000000">tcp_reno_min_cwnd</span>(<span style="font-weight: bold; color: #000080">const</span> <span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">sock</span> <span style="color: #000000">*</span><span style="color: #000000">sk</span>)<br>
<span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">const</span> <span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_sock</span> <span style="color: #000000">*</span><span style="color: #000000">tp</span> <span style="color: #000000">=</span> <span style="color: #000000">tcp_sk</span>(<span style="color: #000000">sk</span>);<br>
&nbsp;&nbsp;&nbsp;  <span style="font-weight: bold; color: #000080">return</span> <span style="color: #000000">tp</span><span style="color: #000000">-&gt;</span><span style="color: #000000">snd_ssthresh</span><span style="color: #000000">/</span><span style="color: #0000ff">2</span>;<br>
<span style="color: #000000">}</span><br>
<span style="color: #000000">EXPORT_SYMBOL_GPL</span>(<span style="color: #000000">tcp_reno_min_cwnd</span>);<br>
<br>
<span style="font-weight: bold; color: #000080">struct</span> <span style="color: #000000">tcp_congestion_ops</span> <span style="color: #000000">tcp_reno</span> <span style="color: #000000">=</span> <span style="color: #000000">{</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">flags</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #000000">TCP_CONG_NON_RESTRICTED</span><span style="color: #000000">,</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">name</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #0000ff">&quot;reno&quot;</span><span style="color: #000000">,</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">owner</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #000000">THIS_MODULE</span><span style="color: #000000">,</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">ssthresh</span>&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #000000">tcp_reno_ssthresh</span><span style="color: #000000">,</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">cong_avoid</span>&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #000000">tcp_reno_cong_avoid</span><span style="color: #000000">,</span><br>
&nbsp;&nbsp;&nbsp;  <span style="color: #000000">.</span><span style="color: #000000">min_cwnd</span>&nbsp;&nbsp;&nbsp;  <span style="color: #000000">=</span> <span style="color: #000000">tcp_reno_min_cwnd</span><span style="color: #000000">,</span><br>
<span style="color: #000000">};</span></div>
<p> </p>
</div>
</div></div></td></tr></table>

<br>

<div class="opt">

<a href="/actionplay/blog/category/Protocol" title="查看该分类中所有文章">类别：Protocol</a>

| <a  href="#" onclick="addToShare(); return false;" target="_blank"><img src="http://img.baidu.com/hi/img/share.gif" border="0" align="absbottom"  /></a>




	

	| <a title="将此文章添加到百度搜藏" href="http://cang.baidu.com/do/add" onClick="return addToFavor();" target="_blank">添加到搜藏</a>

	
    | <a title="将此文章分享到i贴吧" href="#" onclick="addToiTieba(); return false;"  target="_blank">分享到i贴吧</a>


    | 浏览(<span id="result"></span>)

	| <a href="#send">评论</a>&nbsp;(0)



<script language="javascript">

/*<![CDATA[*/

var pre = [true,'推荐一张不错的专辑和其中的几首歌', '推荐一张不错的专辑和其中的几首...','/actionplay/blog/item/6fca5476c7d54811b151b978.html'];

var post = [true,'perl 如何求array差集','perl 如何求array差集', '/actionplay/blog/item/ee94aa2d030aaee78b13994d.html'];

if(pre[0] || post[0]){

	document.write('<div style="height:5px;line-height:5px;">&nbsp;</div><div id="in_nav">');

	if(pre[0]){

		document.write('上一篇：<a href="' + pre[3] + '" title="' + pre[1] + '">' +  pre[2] + '</a>&nbsp;&nbsp;&nbsp;&nbsp;');

	}

	if(post[0]){

		document.write('下一篇：<a href="' + post[3] + '" title="' + post[1] + '">' +  post[2] + '</a>');

	}

	document.write('</div>');

}

/*]]>*/

</script>



</div>



<div class="line">&nbsp;</div>







    
<style type="text/css">

/*<![CDATA[*/

#in_related_doc a { text-decoration:none; }

/*]]>*/

</style>

<div id="in_related_tmp"></div>

<script language="javascript" type="text/javascript">

/*<![CDATA[*/

function HI_MOD_IN_RELATED_DOC_CALLBACK(arg){

    if(arg.length <= 1) return false;

    var hasMore = arg[0];

    var D=function(A,B){A[A.length]=B;}

    if(arg.length % 2 == 0) D(arg, ["","","",""]);



    var html = ['<div id="in_related_doc"><div class="tit">相关文章：</div>'];

    D(html, '<table cellpadding="0" cellspacing="3" border="0">');

    for(var i = 1, j = arg.length; i < j; i += 2){

        D(html, '<tr>');

        D(html, '<td width="15px"><a style="font-size:25px" >&#8226;</a></td><td><a href="http://hi.baidu.com/' + arg[i][3] + '/blog/item/' + arg[i][2] + '.html" target="_blank" title="' + arg[i][0] + '">' + arg[i][1] + '</a>');

        D(html, new Array(10).join('\u3000'));

        D(html, '</td>');

        if(arg[i + 1][0] != "")

            D(html, '<td width="15px"><a style="font-size:25px" >&#8226;</a></td><td><a href="http://hi.baidu.com/' + arg[i + 1][3] + '/blog/item/' + arg[i + 1][2] + '.html" target="_blank" title="' + arg[i + 1][0] + '">' + arg[i + 1][1] + '</a></td>');

        else

            D(html, '<td>&nbsp;</td><td>&nbsp;</td>');

        D(html, '</tr>');

    }

    if(hasMore) D(html, '<tr><td colspan="4"><a target="_blank" href="/sys/search?pageno=1&type=7&sort=1&word=tcp%D3%B5%C8%FB%BF%D8%D6%C6%CB%E3%B7%A8%D6%AE%A3%A8Slow%20Start%20and%20Congestion%20Avoidance%A3%A9&item=67b3f7d077faf3d8572c8413">更多&gt;&gt;</a></td></tr>');

    D(html, '</table></div><div class="line">&nbsp;</div>');



    var div = document.getElementById('in_related_tmp');

    if(div){

        div.innerHTML = html.join('');

        while(div.firstChild){

            div.parentNode.insertBefore(div.firstChild, div);

        }

        div.parentNode.removeChild(div);

    }

	window.setTimeout("tracker_init('in_related_doc')",100);

}



if(RelatedDocData == -1){	// not supported xhr

    var script = document.createElement('script');

    script.type = 'text/javascript';

    script.src = '/sys/search?type=8&word=tcp%D3%B5%C8%FB%BF%D8%D6%C6%CB%E3%B7%A8%D6%AE%A3%A8Slow%20Start%20and%20Congestion%20Avoidance%A3%A9&item=67b3f7d077faf3d8572c8413&t=' + new Date().getTime();

    document.getElementsByTagName('HEAD')[0].appendChild(script);

}else if(RelatedDocData == null){

	GetAndEval = true;

}else{

	eval(RelatedDocData);

}



/*]]>*/

</script>

    













<div id="in_reader">

<div class="tit">最近读者：</div>



<script>



	var g_spAnnony=true;





var g_read=[



["maxwellcome","0c506d617877656c6c636f6d65430b","maxwellcome"],



["hiliqirun","9a1568696c69716972756efb04","hiliqirun"],



["hse8018","5030687365383031385903","hse8018"],



["iceboy0126","d1f6696365626f7930313236b704","iceboy0126"],



["fengying643669","d8f266656e6779696e6736343336470a","fengying6436"],



["zhangalain","d8d57a68616e67616c61696e4d0b","zhangalain"],



["gy7027","13986779373032370c02","gy7027"],



["whzncut","b17377687a6e6375747f02","whzncut"],



{}

];

g_read.length=g_read.length-1;



var _rh1="";

var _rh2="";



function wrreader(){

	_rh1 += '<table width="100%" ><tr>';

	_rh2+='<tr>';

	if(g_spAnnony){

		_rh1+='<td align="center" width="10%" ><img border="0" width="55" height="55" src="http://img.baidu.com/hi/img/portraitn.jpg"></td>';

		_rh2+='<td>&nbsp;</td>';

		if(g_read.length>0){

			_rh1+='<td align="left" width="12%">';

		}else{

			_rh1+='<td align="left" width="100%">';

		}

		_rh1+='<a href="https://passport.baidu.com/?login&tpl=sp&tpl_reg=sp&u='+myref+'" target="_self" onclick="BdUtil.relogin(); return false;">登录</a>后，您就出现在这里。</td>';

		_rh2+='<td>&nbsp;</td>'

	}

	if(g_read.length==0){

		if(!g_spAnnony){

			_rh1+='<td align=left width="100%">最近还没有登录用户看过这篇文章……</td>';

			_rh2+='<td>&nbsp;</td>';

		}

	}else{

		for(i=0,len=g_read.length;i<len;i++){

			_rh1+='<td align="center" valign="bottom" width="10%" class="user"><a href="/'+g_read[i][0]+'" target="_blank" class="ucard" pid='+g_read[i][1]+'><img border="0" src="http://tx.bdimg.com/sys/portraitn/item/'+g_read[i][1]+'.jpg"></a></td>';

			_rh2+='<td align="center" valign="top" class="user"><a href="/'+g_read[i][0]+'" target="_blank" class="ucard" pid="'+g_read[i][1]+'">'+g_read[i][2]+'</a></td>';

		}

	}

	_rh1+='<td width="100%"></td></tr>';

	_rh2+='<td></td></tr></table>';

	document.write(_rh1+_rh2);

}



wrreader();

</script>











	</div>



<div class="line">&nbsp;</div>







<script language="JavaScript">

allkey=allkey+"ee94aa2d0d9854ed8a1399f6_67b3f7d077faf3d8572c8413_";

</script>



<div id="in_comment">

<a name="comment"></a>

<div class="tit">网友评论：</div>

<script>

function writecmt(type,id,cmtname,cmturl,portraitId){

	var html1="";

	cmturl=cmturl.replace("https://","http://");

	if(type==1){

			html1="<a href='"+cmturl+"' target='_blank' class='ucard' pid="+portraitId+"><img  border='0' src='http://tx.bdimg.com/sys/portraitn/item/"+portraitId+".jpg'><br>"+cmtname+"</a>";

	}else{

		if(cmtname=="" || cmtname=="匿名网友"){

			if(cmturl==""){

				html1="<a>匿名网友</a>";

			}else{

				html1="<a href='"+cmturl+"' target='_blank' title='"+cmturl+"'>"+cmtname+"</a>";

			}

		}else{

			if(cmturl==""){

				html1="<div class='f14' style='display:inline'>网友:<a>"+cmtname+"</a></div>";

			}else{

				html1="<div class='f14' style='display:inline'>网友:<a href='"+cmturl+"' target='_blank' title='"+cmturl+"'>"+cmtname+"</a></div>";

			}

		}

	}

	document.write(html1);

}

function filterCmtContent(n){

	if(!BdBrowser.isIE){

		var defaultfilter1='<span style="filter:glow(color=#000000,strength=2);height:0px;color:#000000">';

		var defaultfilter2='<span style="height: 0px; color: rgb(0, 0, 0);">';

		var commentDiv=document.getElementById(n);

		var divs=commentDiv.getElementsByTagName('div');

		var d,tmp;

		for( var i=0,len=divs.length;i<len;i++){

			d=divs[i];

			if(d.getAttribute('name')=='cmtcontent'){

				tmp=d.innerHTML;

				tmp=tmp.replace(/<span style="filter:glow\(color=#([0-9a-z]{3,6}),strength=2\);height:0px;color:#([0-9a-z]{3,6})">/ig,defaultfilter1);

				tmp=tmp.replace('<span style="height: 0px; color: rgb(255, 255, 255);">',defaultfilter2);

				d.innerHTML=tmp;

			}

		}

	}

}



</script>




<div id="page"></div>



</div>

<script>filterCmtContent('in_comment');</script>






<div id="in_send">

<a name="send"></a>

<form name="form1" id="popFormSubmit" action="/actionplay/commit" method="post" onSubmit="return checkcmtform()">

<input type="hidden" name="bdstoken" value="af02ee020c9592d00b7cf6416ee98eb6">

<input type="hidden" name="ct" value="8">

<input type="hidden" name="cm" value="1">

<input type="hidden" name="spBlogID" value="67b3f7d077faf3d8572c8413">

<input type="hidden" name="spRefURL" id="spRefURL" />

<script>

    document.getElementById("spRefURL").value = window.location.href;

</script>

<div class="tit">发表评论：</div>

<table width="620" border="0" cellspacing="5" cellpadding="0">




<tr id="2_err" style="display:none">

<td>&nbsp;</td>

<td><div class="error" id="2_err_con"></div></td>

</tr>



<tr>

<td valign="top" class="f14" id="reTitle">内　容：</td>

<td>
	<textarea name="spBlogCmtText" id="spBlogCmtText" style="width:520px;height:155px"  tabindex="3" onFocus="hidErr(3);" onclick="BdUtil.relogin(); return false;" ></textarea>
</td>

</tr>

<tr id="3_err" style="display:none">

<td>&nbsp;</td>

<td><div class="error" id="3_err_con"></div></td>

</tr>
 



<tr>

<td valign="top"class="f14">&nbsp;</td>

<td valign="top" class="f14"><input id="btn_ok" name="btn_ok" type="submit" onclick="BdUtil.relogin(); return false;" value="发表评论" tabindex=5>&nbsp;&nbsp;&nbsp;&nbsp;<a href="#" id="cancleReLink" onClick="canclereply(); return false;" style="display:none; font-size:12px;color:#666;">取消回复</a></td>

</tr>

</table>

</form>

</div>









<br>

</div>



<table width="100%" border="0" cellspacing="0" cellpadding="0" height="8">

<tr><td class="modbl" width="7">&nbsp;</td>

<td class="modbc">&nbsp;</td>

<td class="modbr" width="7">&nbsp;</td>

</tr></table>









</div>

</div>



</div>



</div>


<script src="/fc/editor/dialog/fck_music/swf.js?v=1.0.js"></script>
<script src="/fc/editor/dialog/fck_music/fck_music_auto.js?v=1.0.js"></script>

<script src="/js/bgmusic.js?v=1.0.js" language="javascript"></script>
<script language="javascript">
function initBlogTextForFCK(){
	//fck init music
	if(window.Node){Node.prototype.replaceNode=function(Node){this.parentNode.replaceChild(Node,this);}}
	var imgBox=document.getElementsByName('musicName');
	var isAutoPlay=true;
	for(var i=0,n=imgBox.length;i<n;i++){
		var img=imgBox[i];
		if(img.getAttribute('rel')){
			var musicSrc=img.getAttribute('rel');
			var musicDiv = document.createElement("SPAN");
			var tmp=musicSrc.substr (musicSrc.indexOf('#')+1, 1);
			var tmpAutoPlay=(tmp=='1');
			if(isAutoPlay&&tmpAutoPlay){
				isAutoPlay=false;
				tmpAutoPlay=true;
			}else{
				tmpAutoPlay=false;
			}
			var shtml=creatbgmusic(musicSrc.substr(0,musicSrc.indexOf('#')).replace(/[\s><()'"]+/g,''),1,true,false,tmpAutoPlay,tmpAutoPlay,'FckMusicHelper');
			shtml=shtml.replace('width=100%','width=200').replace('width="100%"','width=200 height=45');			img.replaceNode(musicDiv);
			musicDiv.innerHTML=shtml;
			i--;n--;
		}
	}
		//fck init vote
	!function(){
		var vote = document.getElementsByName('FCK_VOTE');
		for(var i=0,len=vote.length,item,rel=0,cdiv;i<len;i++){
			item = vote[0];
			rel = item.getAttribute('rel')|0;
			if(rel){
				cdiv = document.createElement('span');
				item.parentNode.replaceChild(cdiv,item);
				baidu.swf.create({
					"id": "VOTE_FLASH_"+i,
					"width" : "585",
					"height": "100",
					"ver"   : "9.0.0",
					"wmode" : document.all ? "opaque" : "window",
					"allowscriptaccess" : "always",
					"url"   : "http://static.hi.baidu.com/apps/appvote/spaceVote.swf?vote_id="+rel
				},cdiv)

			}
		}
	}()
	//document.getElementById('blog_text').style.display='';
}

</script>

<script language="javascript">

<!--

var hstr="/actionplay/brwstat?key1=1";

document.write("<script src='"+hstr+"&key2="+allkey+"'><\/script>");

//-->

</script>

<br><center><div id="ft">&copy;2010 Baidu</div></center>



<script>

if(document.getElementById("m_blog"))

{

	var imgarray = document.getElementById("m_blog").getElementsByTagName('img');

	var imgw = document.getElementById("m_blog").offsetWidth;

	imgw =imgw-40;

    for(var i=0; i<imgarray.length; i++){
    	if(imgarray[i].className=="blogimg" && imgarray[i].width>=imgw) {
	    	imgarray[i].width=imgw;
        }
    }
}



// Fix ff bugs

var blog_text = document.getElementById('blog_text');

blog_text.innerHTML = blog_text.innerHTML.replace(/href\s*=\s*("|')?(\.\.\/\.\.\/)/gi,"href=$1../$2");


initBlogTextForFCK();
gotoreply();

</script>

</center>



<!--inc_getmsgnum.html-->
<img src="http://c.baidu.com/c.gif?t=6&p=3" style="display:none;"/>
<iframe id="submitiframe" name="submitiframe" src="/st/blank.html" style="display:none;"></iframe>

			


<script type="text/javascript">
/*<![CDATA[*/

var SP = SP || {};
if(!SP.mycard){
    SP.mycard = new (function(){
        var me = this;
        var _cancleAction = Session.isDrag;  
        var _list = [];
        var _sourceLoaded = false;    
        me.bind = function (_id){
            if(_cancleAction){  //abort
                return;
            }
            if(!_sourceLoaded){
                _list.push(_id);
            } else {
                baidu.space.mycard.bind(_id);
            }
        }
        me.init = function (_config){
            _cancleAction = !!_config.cancle;
        }
        me.onSourceLoaded = function (){
            _sourceLoaded = true;
            baidu.space.mycard.init({portrait: Session.visitorPortrait});
            for(var i=0,len=_list.length; i<len; i++){
                baidu.space.mycard.bind(_list[i]);
            }
        }
    })();
    baidu.dom.ready(function(){
        BdAjax.loadCSS('/ui/css/ucard/ucard.css?v=020507100.css');
        BdAjax.loadJS('/ui/scripts/ucard/ucard.js?v=020507100.js');
    });
}
SP.mycard.bind('m_blog');  
/*]]>*/
</script>


	<script type="text/javascript" src="/ui/scripts/refer/refer.js"></script>
	
<link rel="stylesheet" type="text/css" href="/ui/css/userset.css" />
<link rel="stylesheet" type="text/css" href="/ui/css/beautify/widget.css" />

<script type="text/javascript" src="http://hi.baidu.com/hi/cms/article/beautifyconfig/default_user_suit.js"></script>

<script type="text/javascript">
//页面状态变量
var Session = Session || {
    spaceURL: "/actionplay",
    pageURL: "http://hi.baidu.com/actionplay/blog/item/67b3f7d077faf3d8572c8413%2Ehtml",    //当前访问的url
    isHost: "",         // 是否是空间主人
    userName: "lzwei_ac",   // 空间主人用户名
    userNameEnc:    "lzwei%5Fac", 
    visitorName:    "",
    visitorURL: "/index.html",        // 
    refer: "http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=Congestion+avoidance",
    spBasicURL:"actionplay",
    spBasicURLEnc:"actionplay"
};
</script>
<script src="/ui/scripts/beautify/render.js" type="text/javascript"></script>
<script type="text/javascript">
baidu.dom.ready(function(){
    if(typeof spBeautifyConfigData != 'undefined'){
        var _installList = spBeautifyConfigData.list;
    } else {
        spBeautifyConfigData = {};
        _installList = [];
    }
    spBeautifyConfigData.currentDate  = Math.round((new Date('2010/09/29')).getTime() / 1000);    
    BeautifyWidget.init({timeStamp: spBeautifyConfigData.currentDate, env: 'sys'});
    BeautifyWidget.render(_installList);
	if(Space && Space.ActiveTip){
		if(baidu.g("active_space")){
			window.active_tip=new Space.ActiveTip("tary_space_name",function(){
				active_tip.hidden();
				activeSpace("pop_tip");
			
			});
		}
		window.succTip=function(spaceUrl){
			active_dia.close();
			//var tiphtml="<div><div class='setBlackcon'>恭喜您，激活成功！欢迎入驻百度空间！</div><div class='setBlackpanel'><div class='blackConfirmbtn' onclick=\"goIhome('"+spaceUrl+"')\">确认</div></div></div>";
			BdDialog.Alert("恭喜您，激活成功！欢迎入驻百度空间！");
			baidu.g("dialogYES").onclick=function(){
				window.location.reload();
			};	
		};
	}
	
});
</script>



<script type="text/javascript" src="http://hi.baidu.com/hi/cms/article/quickjs/auto.js"></script>
<script>try{SCD.init("http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=Congestion+avoidance")}catch(e){}</script>




</body></html>